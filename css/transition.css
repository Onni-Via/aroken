body {
    background-color: #333; /* Устанавливает цвет фона элемента body. Значение #333 — это шестнадцатеричный код для темно-серого цвета. */
    color: #fff; /* Определяет цвет текста внутри элемента body. Значение #fff обозначает белый цвет. */
}

.container {
    padding: 100px 100px 50vh; /* Устанавливает внутренние отступы (padding) для контейнера. Первое значение — отступ сверху, второе — справа и слева, третье — снизу (50vh — половина высоты viewport). */
    height: 100%; /* Задает высоту контейнера как 100% от высоты родительского элемента. */
}

.transition {
    height: 100%; /* Устанавливает высоту элемента transition равной 100% высоты родительского элемента. */
}

.button {
    height: 100%; /* Задает высоту кнопки равной 100% высоты родительского элемента. */
    display: flex; /* Использует Flexbox для управления расположением дочерних элементов внутри кнопки. */
    justify-content: center; /* Выравнивает дочерние элементы по горизонтали в центре контейнера. */
    align-items: center; /* Выравнивает дочерние элементы по вертикали в центре контейнера. */
    font-size: 5rem; /* Задает размер шрифта текста внутри кнопки. 1rem = размер шрифта корневого элемента (обычно 16px). */
    text-transform: uppercase; /* Преобразует текст внутри кнопки в верхний регистр. */
    font-family: sans-serif; /* Указывает семейство шрифтов для текста внутри кнопки. Sans-serif — это шрифты без засечек. */
    background-color: #555; /* Устанавливает цвет фона кнопки. Значение #555 — это темно-серый цвет. */
}

.block {
    width: 10px; /* Задает ширину блока равной 10 пикселям. */
    height: 150px; /* Задает высоту блока равной 150 пикселям. */
}

.red {
    background-color: rgb(221, 108, 108); /* Устанавливает цвет фона как RGB-значение красного оттенка. */
}
.blue {
    background-color: rgb(116, 108, 221); /* Устанавливает цвет фона как RGB-значение синего оттенка. */
}
.orange {
    background-color: rgb(221, 163, 108); /* Устанавливает цвет фона как RGB-значение оранжевого оттенка. */
}
.purple {
    background-color: rgb(166, 108, 221); /* Устанавливает цвет фона как RGB-значение фиолетового оттенка. */
}

.transition:hover .block {
    width: 100%; /* При наведении на родительский элемент .transition, ширина дочернего элемента .block увеличивается до 100%. */
}

/* ----------------------------------------------------- */

.button {
    /* transition: 3s; */ /* Устанавливает длительность анимации перехода для всех изменяемых свойств элемента. 3s — это 3 секунды. */
    /* transition-duration: 2s, 3s; */ /* Задает длительность анимации для нескольких свойств. Первое значение (2s) применяется к первому свойству, второе (3s) — ко второму. */
    /* transition: border-radius 3s; */ /* Указывает, что только свойство border-radius будет анимироваться в течение 3 секунд. */
    /* transition-property: border-radius, background-color; */ /* Перечисляет свойства, которые будут анимироваться при изменении. */
    transition: border-radius 2s, background-color 3s 1.5s; /* Устанавливает анимацию для двух свойств: border-radius (2 секунды) и background-color (3 секунды с задержкой 1.5 секунды). */
    /* transition-delay: 0s 3s; */ /* Задает задержку перед началом анимации для каждого свойства. Первое значение (0s) — для первого свойства, второе (3s) — для второго. */
}

.button:hover {
    background-color: #3adc7b; /* При наведении на кнопку, цвет фона меняется на светло-зеленый (#3adc7b). */
    border-radius: 100px; /* При наведении на кнопку, радиус скругления углов становится равным 100px, создавая закругленную форму. */
}

.block {
    transition: 1s; /* Устанавливает длительность анимации перехода для всех изменяемых свойств элемента .block. 1s — это 1 секунда. */
}

.red {
    transition-timing-function: ease; /* Задает функцию времени анимации. ease — это стандартное значение, которое начинается медленно, ускоряется и снова замедляется в конце. */
}
.blue {
    transition-timing-function: ease-in; /* Задает функцию времени анимации. ease-in — анимация начинается медленно и ускоряется к концу. */
}
.orange {
    transition-timing-function: ease-out; /* Задает функцию времени анимации. ease-out — анимация начинается быстро и замедляется к концу. */
}
.purple {
    transition-timing-function: cubic-bezier(1, 0, 0, 1); /* Пользовательская функция времени анимации, определенная через кривую Безье. Это позволяет создавать уникальные эффекты анимации. */
}